@using Volo.Abp.AspNetCore.Mvc.AntiForgery
@using Volo.Abp.AspNetCore.Mvc.UI.Components.LayoutHook
@using Volo.Abp.AspNetCore.Mvc.UI.Layout
@using Lsw.Abp.AspNetCore.Mvc.UI.Theme.Stisla.Bundling
@using Lsw.Abp.AspNetCore.Mvc.Ui.Theme.Stisla.Themes.Stisla.Components.LeftNavbar
@using Lsw.Abp.AspNetCore.Mvc.UI.Theme.Stisla.Themes.Stisla.Components.PageAlerts
@using Lsw.Abp.AspNetCore.Mvc.Ui.Theme.Stisla.Themes.Stisla.Components.TopNavbar
@using Lsw.Abp.AspNetCore.Mvc.UI.Theme.Stisla.Themes.Stisla.Components.Menu
@using Volo.Abp.AspNetCore.Mvc.UI.Theming
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetScripts
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetStyles
@using Volo.Abp.Localization
@using Volo.Abp.Ui.Branding
@using Microsoft.AspNetCore.Mvc.Localization
@using ODY.Cihazkapinda.Localization
@inject IAbpAntiForgeryManager AbpAntiForgeryManager
@inject IBrandingProvider BrandingProvider
@inject IPageLayout PageLayout
@inject IHtmlLocalizer<CihazkapindaResource> L
@{ Layout = null;
    AbpAntiForgeryManager.SetCookie();


    var containerClass = ViewBag.FluidLayout == true ? "container-fluid" : "container"; //TODO: Better and type-safe options

    var pageTitle = ViewBag.Title == null ? BrandingProvider.AppName : ViewBag.Title; //TODO: Discard to get from Title

    if (PageLayout.Content.Title != null)
    {
        if (!string.IsNullOrWhiteSpace(pageTitle))
        {
            pageTitle = " | " + pageTitle;
        }

        pageTitle = PageLayout.Content.Title + pageTitle;
    }

    var rtl = CultureHelper.IsRtl ? "rtl" : string.Empty; }


<!DOCTYPE html>
<html lang="@CultureInfo.CurrentCulture.Name" dir="@rtl">

<head>
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.First, StandardLayouts.Application)
    @await Html.PartialAsync("~/Views/_Shared/_title_meta.cshtml")

    <style>
        .custom-file-input ~ .custom-file-label::after {
            content: "@L["ChooseFile"]"
        }
    </style>

    <title>@pageTitle</title>
    @RenderSection("styles", false)
    @await Html.PartialAsync("~/Views/_Shared/_head_css.cshtml")

    @await Component.InvokeAsync(typeof(WidgetStylesViewComponent))
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.Last, StandardLayouts.Application)
</head>

<body data-sidebar="dark">

    @await Component.InvokeLayoutHookAsync(LayoutHooks.Body.First, StandardLayouts.Application)
    <!-- Begin page -->
    <div id="layout-wrapper">
        @await Html.PartialAsync("~/Views/_Shared/_topbar.cshtml")
        @(await Component.InvokeAsync<LeftNavbarMenuViewComponent>())
        <!-- ============================================================== -->
        <!-- Start right Content here -->
        <!-- ============================================================== -->

        <div class="main-content">
            <div class="page-content">
                <div class="container-fluid">
                    @(await Component.InvokeAsync<PageAlertsViewComponent>())
                    @await Component.InvokeLayoutHookAsync(LayoutHooks.PageContent.First, StandardLayouts.Application)
                    @RenderBody()
                    @await Component.InvokeLayoutHookAsync(LayoutHooks.PageContent.Last, StandardLayouts.Application)
                </div> <!-- container-fluid -->
            </div>
            <!-- End Page-content -->

            @await Html.PartialAsync("~/Views/_Shared/_footer.cshtml")
        </div>
        <!-- end main content-->

    </div>

    @RenderSection("externalhtml", required: false)

    <!-- END layout-wrapper -->
    @await Html.PartialAsync("~/Views/_Shared/_right_sidebar.cshtml")

    @*@await Html.PartialAsync("~/Views/_Shared/_vendor_scripts.cshtml")*@


    <abp-script-bundle name="@StislaThemeBundles.Scripts.Global" />

    <script src="~/assets/libs/twitter-bootstrap-wizard/jquery.bootstrap.wizard.min.js"></script>
    <script src="~/assets/libs/twitter-bootstrap-wizard/prettify.js"></script>
    <script src="~/assets/libs/dropzone/min/dropzone.min.js"></script>

    <script src="~/assets/libs/metismenu/metisMenu.min.js"></script>
    <script src="~/assets/libs/simplebar/simplebar.min.js"></script>
    <script src="~/assets/libs/node-waves/waves.min.js"></script>

    <script src="~/Abp/ApplicationConfigurationScript"></script>
    <script src="~/Abp/ServiceProxyScript"></script>


    @await Component.InvokeAsync(typeof(WidgetScriptsViewComponent))

    @await RenderSectionAsync("scripts", false)


    <script src="~/assets/libs/apexcharts/apexcharts.min.js"></script>

    <script src="~/assets/js/app.js"></script>

    @await Component.InvokeLayoutHookAsync(LayoutHooks.Body.Last, StandardLayouts.Application)


</body>

</html>